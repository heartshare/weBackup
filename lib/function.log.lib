
#	Log function library for Backup Script
#
#	Version: 0.4

# create_log ( string dir )
function create_log() {
	local log_dir=$1

  local LOG=${log_dir}/weBackup.log
  	
	 # return log file name
	 echo $LOG
}

# logdate ( no args )
# Prints the log lines prefix with [TAG] [date-hour] "
function logdate(){
  today=$(date +%F) #giorno
  ora=$(date +%H:%M) #data
  logtag="[weBackup]"
  
  logdate="$logtag [$today-$ora] "
}

# test_logrotate( no args )
# Test if logrotate is installed or warn the user. If installed but not configured
#+then it print the configuration in the right place...
function test_logrotate(){
  [[ `which logrotate` ]] || echo -e "WARN: logrotate not installed in your system. Please try \"apt-get install logrotate\" to activate log rotation\n"; return 1
  if [ ! -f "/etc/logrotate.d/weBackup" ]; then
    if [ -d "/etc/logrotate.d" ]; then  
      echo -e "WARN: logrotate configuration not present. We are creating it at /etc/logrotate.d/weBackup\n"
        cat <<EOT > /etc/logrotate.d/weBackup
      ${log_dir}/*.log {
	      weekly
	      missingok
	      rotate 10
	      compress
	      delaycompress
	      notifempty
	      create 640 root adm
      }
EOT
    else
      echo -e "WARN: we cannot find the logrotate conf dir in the usual path. Please, make yourself a logrotate config file with these parameters:\n"
      cat <<EOT
      ${log_dir}/*.log {
	      weekly
	      missingok
	      rotate 10
	      compress
	      delaycompress
	      notifempty
	      create 640 root adm
      }
EOT
    return 1
    
    fi
  fi
  
  return 0
}

# log( text_string, 1 )
# se passato il secondo argomento, allora attiva l'escape dei backspaces sull'echo
function log( $logdate ){
 [[ $2 ]] && stampa="echo -e" || stampa="echo"
  $stampa logdate $1 | tee -a $LOG
}

